stages:
  - build
  - deploy
  # - package

build project:
  stage: build
  script:
    - apt-get update && apt-get install git gcc g++ make cmake -y
    - cmake -B build && cd build && make -j
    - echo "deploy artifacts"
  artifacts:
    paths:
      - build/feature_detection_addon
      - build/lib/*

deploy project:
  stage: deploy
  script:
    - echo "deploy artifacts"


# build docker image latest:
#   stage: package
#   tags:
#     - texel
#   image: docker
#   services: 
#     - docker:dind
#   script: 
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
#     - echo $CI_REGISTRY_IMAGE
#     - docker buildx build -t $CI_REGISTRY_IMAGE .
#     - docker push $CI_REGISTRY_IMAGE

# build docker image with tag:
#   stage: package
#   tags:
#     - texel
#   only:
#     - tags
#   image: docker
#   services: 
#     - docker:dind
#   script: 
#     - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
#     - echo $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
#     - docker buildx build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
#     - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    # - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG python3 vertex_based/main.py test_inputs/CAD_bridge.obj -feat
